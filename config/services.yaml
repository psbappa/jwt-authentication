# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    jwt_secret: THIS_IS_SECRET_KEY_MANUALLY_GENERATED_IN_SERVICES_YAML

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Events::AUTHENTICATION_SUCCESS - Adding public data to the JWT response
    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    # Added ContextBuilder
    'App\Serializer\AdminContextBuilder':
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@App\Serializer\AdminContextBuilder.inner' ]
        autoconfigure: false

    # Hash plaintext password using EventListener - No need to register here.
    App\EventListener\HashPasswordListener:
       tags:
           - { name: 'doctrine.event_subscriber', priority: 500, connection: 'default' }

    App\EventListener\UpdatePasswordSubscriber:
       tags:
           - { name: 'doctrine.event_subscriber',  priority: 500, connection: 'default', }

    # App\EventListener\HashPasswordListener:
    #     tags:
    #         - { name: doctrine.event_listener, event: prePersist }
    #         - { name: doctrine.event_listener, event: preUpdate }